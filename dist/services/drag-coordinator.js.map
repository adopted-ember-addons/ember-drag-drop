{"version":3,"file":"drag-coordinator.js","sources":["../../src/services/drag-coordinator.js"],"sourcesContent":["/* eslint-disable ember/no-classic-classes, ember/no-get, prettier/prettier */\nimport Service from '@ember/service';\nimport { alias } from '@ember/object/computed';\nimport { A } from '@ember/array';\nimport { isEqual } from '@ember/utils';\n\n\nfunction indexOf(items, a) {\n  return items.findIndex(function (element) {\n    return isEqual(element, a);\n  });\n}\n\nfunction swapInPlace(items, a, b) {\n  const aPos = indexOf(items, a);\n  const bPos = indexOf(items, b);\n\n  items.replace(aPos, 1, [ b ]);\n  items.replace(bPos, 1, [ a ]);\n}\n\nfunction shiftInPlace(items, a, b) {\n  const aPos = indexOf(items, a);\n  const bPos = indexOf(items, b);\n\n  items.removeAt(aPos);\n  items.insertAt(bPos, a);\n}\n\nexport default Service.extend({\n  sortComponentController: null,\n  currentDragObject: null,\n  currentDragEvent: null,\n  currentDragItem: null,\n  currentOffsetItem: null,\n  isMoving: false,\n  lastEvent: null,\n\n  init() {\n    this._super(...arguments);\n    // Use object for sortComponents so that we can scope per sortingScope\n    this.set('sortComponents', {});\n  },\n\n  arrayList: alias('sortComponentController.sortableObjectList'),\n  enableSort: alias('sortComponentController.enableSort'),\n  useSwap: alias('sortComponentController.useSwap'),\n  inPlace: alias('sortComponentController.inPlace'),\n\n  pushSortComponent(component) {\n    const sortingScope = component.get('sortingScope');\n    if (!this.get('sortComponents')[sortingScope]) {\n      this.get('sortComponents')[sortingScope] = A();\n    }\n    this.get('sortComponents')[sortingScope].pushObject(component);\n  },\n\n  removeSortComponent(component) {\n    const sortingScope = component.get('sortingScope');\n    this.get('sortComponents')[sortingScope].removeObject(component);\n  },\n\n  dragStarted(object, event, emberObject) {\n    this.set('currentDragObject', object);\n    this.set('currentDragEvent', event);\n    this.set('currentDragItem', emberObject);\n    event.dataTransfer.effectAllowed = 'move';\n  },\n\n  dragEnded() {\n    this.set('currentDragObject', null);\n    this.set('currentDragEvent', null);\n    this.set('currentDragItem', null);\n    this.set('currentOffsetItem', null);\n  },\n\n  draggingOver(event, emberObject) {\n    const currentOffsetItem = this.get('currentOffsetItem');\n    const pos = this.relativeClientPosition(emberObject.element, event);\n    const hasSameSortingScope = this.get('currentDragItem.sortingScope') === emberObject.get('sortingScope');\n    let moveDirections = [];\n\n    if (!this.get('lastEvent')) {\n      this.set('lastEvent', event);\n    }\n\n    if (event.clientY < this.get('lastEvent').clientY) {\n      moveDirections.push('up');\n    }\n\n    if (event.clientY > this.get('lastEvent').clientY) {\n      moveDirections.push('down');\n    }\n\n    if (event.clientX < this.get('lastEvent').clientX) {\n      moveDirections.push('left');\n    }\n\n    if (event.clientX > this.get('lastEvent').clientX) {\n      moveDirections.push('right');\n    }\n\n    this.set('lastEvent', event);\n\n    if (!this.get('isMoving') && this.get('currentDragEvent')) {\n      if (event.target !== this.get('currentDragEvent').target && hasSameSortingScope) { //if not dragging over self\n        if (currentOffsetItem !== emberObject) {\n          if (pos.py < 0.67 && moveDirections.indexOf('up') >= 0 ||\n              pos.py > 0.33 && moveDirections.indexOf('down') >= 0 ||\n              pos.px < 0.67 && moveDirections.indexOf('left') >= 0 ||\n              pos.px > 0.33 && moveDirections.indexOf('right') >= 0) {\n\n            this.moveElements(emberObject);\n            this.set('currentOffsetItem', emberObject);\n          }\n        }\n      } else {\n        //reset because the node moved under the mouse with a move\n        this.set('currentOffsetItem', null);\n      }\n    }\n  },\n\n  moveObjectPositions(a, b, sortComponents) {\n    const aSortable = sortComponents.find((component) => {\n      return component.get('sortableObjectList').find((sortable) => {\n        return isEqual(sortable, a);\n      });\n    });\n    const bSortable = sortComponents.find((component) => {\n      return component.get('sortableObjectList').find((sortable) => {\n        return isEqual(sortable, b);\n      });\n    });\n    const swap = aSortable === bSortable;\n\n    if (swap) {\n\n      let list = aSortable.get('sortableObjectList');\n      if (!this.get('inPlace')) {\n        list = A(list.toArray ? list.toArray() : list.slice());\n      }\n\n      if (this.get('useSwap')) {\n        swapInPlace(list, a, b);\n      } else {\n        shiftInPlace(list, a, b);\n      }\n\n      if (!this.get('inPlace')) {\n        aSortable.set('sortableObjectList', list);\n      }\n\n    } else {\n      // Move if items are in different sortable-objects component\n      const aList = aSortable.get('sortableObjectList');\n      const bList = bSortable.get('sortableObjectList');\n\n      // Remove from aList and insert into bList\n      aList.removeObject(a);\n      bList.insertAt(indexOf(bList, b), a);\n    }\n  },\n\n  moveElements(overElement) {\n    const isEnabled = Object.keys(this.get('sortComponents')).length;\n    const draggingItem = this.get('currentDragItem');\n    const sortComponents = this.get('sortComponents')[draggingItem.get('sortingScope')];\n\n    if (!isEnabled) {\n      return;\n    }\n\n    this.moveObjectPositions(draggingItem.get('content'), overElement.get('content'), sortComponents);\n\n    sortComponents.forEach((component) => {\n      component.rerender();\n    });\n  },\n\n  relativeClientPosition(el, event) {\n    const rect = el.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    return {\n      x: x,\n      y: y,\n      px: x / rect.width,\n      py: y / rect.height\n    };\n  }\n});\n"],"names":["indexOf","items","a","findIndex","element","isEqual","swapInPlace","b","aPos","bPos","replace","shiftInPlace","removeAt","insertAt","Service","extend","sortComponentController","currentDragObject","currentDragEvent","currentDragItem","currentOffsetItem","isMoving","lastEvent","init","_super","arguments","set","arrayList","alias","enableSort","useSwap","inPlace","pushSortComponent","component","sortingScope","get","A","pushObject","removeSortComponent","removeObject","dragStarted","object","event","emberObject","dataTransfer","effectAllowed","dragEnded","draggingOver","pos","relativeClientPosition","hasSameSortingScope","moveDirections","clientY","push","clientX","target","py","px","moveElements","moveObjectPositions","sortComponents","aSortable","find","sortable","bSortable","swap","list","toArray","slice","aList","bList","overElement","isEnabled","Object","keys","length","draggingItem","forEach","rerender","el","rect","getBoundingClientRect","x","left","y","top","width","height"],"mappings":"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"}